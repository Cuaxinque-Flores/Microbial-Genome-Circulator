name: CI
on:
  push:
    branches: [main, develop]
    paths: ["src/**", "tests/**"]
  pull_request:
    branches: [main, develop]
    paths: ["src/**", "tests/**"]
  # schedule:
    # Scheduled Daily CI
    # - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  CI_black-flake8-pytest:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.8, 3.9, '3.10']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Ubuntu
      - name: Setup Python ${{ matrix.python-version}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
        if: ${{ matrix.os=='ubuntu-latest' }}

      - name: Install requirements on Ubuntu
        run: |
          sudo apt update -y
          sudo apt install -y circos liblist-moreutils-perl
        if: ${{ matrix.os=='ubuntu-latest' }}

      # MacOS
      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          channels: conda-forge,bioconda,defaults
          channel-priority: true
        if: ${{ matrix.os=='macos-latest' }}

      - name: Install Requirements
        run: |
          conda install circos
        if: ${{ matrix.os=='macos-latest' }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Dependencies
        run: poetry install -n

      - name: Run black format check
        run: poetry run black src --check --diff --verbose

      - name: Run flake8 lint check
        run: poetry run flake8 src --max-line-length=88 --ignore=E203,W503,W504

      - name: Run pytest
        run: poetry run pytest tests --tb=long --cov=src --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        if: ${{ matrix.python-version==3.8 }} && ${{ matrix.os=='ubuntu-latest' }}
        uses: codecov/codecov-action@v2
        with:
          name: pytest-codecov
          files: coverage.xml
          fail_ci_if_error: false
